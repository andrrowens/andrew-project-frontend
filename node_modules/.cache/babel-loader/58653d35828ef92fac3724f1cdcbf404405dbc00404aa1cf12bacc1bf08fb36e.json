{"ast":null,"code":"\n\n// import React, {useState, useContext } from 'react'\n// import {useHistory} from 'react-router-dom'\n// import { UserContext } from '../context/UserContext'\n\n//  const AuthenticatedUser = () => {\n\n//     const [username, setUsername] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const history = useHistory()\n//     const {setUser} = useContext(UserContext)\n//     const [errors, setErrors] = useState([])\n\n// const handleSubmit = (e) => {\n//     e.preventDefault();\n//     fetch(\"/login\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ username, password }),\n//     })\n//     .then(res => {\n//       if(res.status === 200){\n//           res.json().then(user => {\n//               setUser(user)\n\n//               alert(\"Successfully logged in\")\n//               return user\n//           }).then((user) => history.push(`/users/${user.id}`))\n//       } else {\n//           res.json().then(json => setErrors(Object.entries(json.errors)))\n//       }\n//   })\n// }\n\n//   return (\n//     <form className=\"login-form\" onSubmit={handleSubmit}>\n//     <input\n//       className=\"user-auth\"\n//       type=\"text\"\n//       placeholder=\"Username\"\n//       value={username}\n//       onChange={(e) => setUsername(e.target.value)}\n//     /> \n//     <br />\n//     <input\n//       className=\"user-auth\"\n//       type=\"password\"\n//       placeholder=\"Password\"\n//       value={password}\n//       onChange={(e) => setPassword(e.target.value)}\n//     />\n//     <br />\n//     <button className=\"auth-btn\" type=\"submit\">Login</button>\n//   </form>\n//   );\n// };\n\n// export default AuthenticatedUser","map":{"version":3,"names":[],"sources":["/Users/andrewowens/Development/andrew-project-frontend/src/components/AuthenticatedUser.js"],"sourcesContent":["\n\n\n\n// import React, {useState, useContext } from 'react'\n// import {useHistory} from 'react-router-dom'\n// import { UserContext } from '../context/UserContext'\n\n//  const AuthenticatedUser = () => {\n\n//     const [username, setUsername] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const history = useHistory()\n//     const {setUser} = useContext(UserContext)\n//     const [errors, setErrors] = useState([])\n\n// const handleSubmit = (e) => {\n//     e.preventDefault();\n//     fetch(\"/login\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ username, password }),\n//     })\n//     .then(res => {\n//       if(res.status === 200){\n//           res.json().then(user => {\n//               setUser(user)\n             \n//               alert(\"Successfully logged in\")\n//               return user\n//           }).then((user) => history.push(`/users/${user.id}`))\n//       } else {\n//           res.json().then(json => setErrors(Object.entries(json.errors)))\n//       }\n//   })\n// }\n\n\n//   return (\n//     <form className=\"login-form\" onSubmit={handleSubmit}>\n//     <input\n//       className=\"user-auth\"\n//       type=\"text\"\n//       placeholder=\"Username\"\n//       value={username}\n//       onChange={(e) => setUsername(e.target.value)}\n//     /> \n//     <br />\n//     <input\n//       className=\"user-auth\"\n//       type=\"password\"\n//       placeholder=\"Password\"\n//       value={password}\n//       onChange={(e) => setPassword(e.target.value)}\n//     />\n//     <br />\n//     <button className=\"auth-btn\" type=\"submit\">Login</button>\n//   </form>\n//   );\n// };\n\n// export default AuthenticatedUser\n"],"mappings":";;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}